library n_image_picker_view;
import 'package:flutter/material.dart';
import 'dart:async' show Future;
import 'package:n_image_picker/src/image_body.dart' show ImageBody;

class ImageViewer extends ImageBody {
  ImageViewer({
    super.urlImage,
    super.assetImage,
    super.width,
    super.height,
    super.onErrorWidget,
    super.onLoadingWidget,
    super.margin,
    super.backgroundColor,
    super.borderRadius,
    super.border,
    super.shadow,
    super.fit,
    super.shape,
    super.headers,
    super.key,
    super.tag,
    super.duration,
    super.maxSize,
    super.errorIcon,
  }) :
  assert( urlImage == null || assetImage == null, "Only one image must be provided" ),
  super(
    readOnly      : true,
    viewerBlur    : false,
  );

  factory ImageViewer.square({
    final Future<void> Function() ? onTap,
    final String                  ? urlImage,
    final String                  ? assetImage,
    final bool                    ? alive,
    final double                  ? dimension,
    final Widget                  ? emptyWidget,
    final Widget                  ? filledWidget,
    final Widget                  ? onErrorWidget,
    final Widget                  ? onLoadingWidget,
    final EdgeInsetsGeometry      ? margin,
    final Color                   ? backgroundColor,
    final BorderRadius            ? borderRadius,
    final Border                  ? border,
    final BoxShadow               ? shadow,
    final BoxFit                  ? fit,
    final Map<String, String>     ? headers,
    final Object                  ? tag,
    final Duration                ? duration,
    final int                     ? maxSize,
    final IconData                ? errorIcon,
  }) =>
  ImageViewer(
    urlImage        : urlImage,
    assetImage      : assetImage,
    width           : dimension,
    height          : dimension,
    onErrorWidget   : onErrorWidget,
    onLoadingWidget : onLoadingWidget,
    margin          : margin,
    backgroundColor : backgroundColor,
    borderRadius    : borderRadius,
    border          : border,
    shadow          : shadow,
    fit             : fit ?? BoxFit.cover,
    shape           : BoxShape.rectangle,
    headers         : headers,
    tag             : tag,
    duration        : duration ?? Duration(milliseconds: 250),
    maxSize         : maxSize,
    errorIcon       : errorIcon,
  );

  factory ImageViewer.circle({
    final String                  ? urlImage,
    final String                  ? assetImage,
    final double                  ? dimension,
    final Widget                  ? emptyWidget,
    final Widget                  ? filledWidget,
    final Widget                  ? onErrorWidget,
    final Widget                  ? onLoadingWidget,
    final EdgeInsetsGeometry      ? margin,
    final Color                   ? backgroundColor,
    final Border                  ? border,
    final BoxShadow               ? shadow,
    final BoxFit                  ? fit,
    final Map<String, String>     ? headers,
    final Object                  ? tag,
    final Duration                ? duration,
    final int                     ? maxSize,
    final IconData                ? errorIcon,
    final String                  ? errorMessage,
  }) =>
  ImageViewer(
    urlImage        : urlImage,
    assetImage      : assetImage,
    width           : dimension,
    height          : dimension,
    onErrorWidget   : onErrorWidget,
    onLoadingWidget : onLoadingWidget,
    margin          : margin,
    backgroundColor : backgroundColor,
    border          : border,
    shadow          : shadow,
    fit             : fit ?? BoxFit.cover,
    shape           : BoxShape.circle,
    headers         : headers,
    tag             : tag,
    duration        : duration ?? Duration(milliseconds: 250),
    maxSize         : maxSize,
    errorIcon       : errorIcon,
  );

  factory ImageViewer.expand({
    final Future<void> Function() ? onTap,
    final String                  ? urlImage,
    final String                  ? assetImage,
    final Widget                  ? emptyWidget,
    final Widget                  ? filledWidget,
    final Widget                  ? onErrorWidget,
    final Widget                  ? onLoadingWidget,
    final EdgeInsetsGeometry      ? margin,
    final Color                   ? backgroundColor,
    final BorderRadius            ? borderRadius,
    final Border                  ? border,
    final BoxShadow               ? shadow,
    final BoxFit                  ? fit,
    final Map<String, String>     ? headers,
    final Object                  ? tag,
    final Duration                ? duration,
    final int                     ? maxSize,
    final IconData                ? errorIcon,
    final String                  ? errorMessage,
  }) =>
  ImageViewer(
    urlImage        : urlImage,
    assetImage      : assetImage,
    width           : double.infinity,
    height          : double.infinity,
    onErrorWidget   : onErrorWidget,
    onLoadingWidget : onLoadingWidget,
    margin          : margin,
    backgroundColor : backgroundColor,
    borderRadius    : borderRadius,
    border          : border,
    shadow          : shadow,
    fit             : fit ?? BoxFit.cover,
    shape           : BoxShape.rectangle,
    headers         : headers,
    tag             : tag,
    duration        : duration ?? Duration(milliseconds: 250),
    maxSize         : maxSize,
    errorIcon       : errorIcon,
  );
}
