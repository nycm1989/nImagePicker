library n_image_picker_view;

import 'dart:async';

import 'package:flutter/material.dart';

import 'image_body.dart';
import 'image_controller.dart';

class ImagePicker extends ImageBody {
  ImagePicker({
    required super.controller,
    required super.width,
    required super.height,
    super.onTap,
    super.onLoadingImage,
    super.aliveName,
    super.filterOpacity,
    super.emptyWidget,
    super.filledWidget,
    super.onErrorWidget,
    super.onLoadingWidget,
    super.margin,
    super.backgroundColor,
    super.borderRadius,
    super.border,
    super.shadow,
    super.readOnly,
    super.fit,
    super.viewerBlur,
    super.viewerBlurSigma,
    super.previewBlur,
    super.previewBlurSigma,
    super.shape,
    super.tag,
    super.duration,
    super.closeColor,
    super.maxSize,
    super.headers,
    super.key,
  });

  factory ImagePicker.square({
    required final ImageController  controller,
    final Future<void> Function() ? onTap,
    final String                  ? onLoadingImage,
    final String                  ? aliveName,
    final double                  ? dimension,
    final double                  ? filterOpacity,
    final Widget                  ? emptyWidget,
    final Widget                  ? filledWidget,
    final Widget                  ? onErrorWidget,
    final Widget                  ? onLoadingWidget,
    final EdgeInsetsGeometry      ? margin,
    final Color                   ? backgroundColor,
    final BorderRadius            ? borderRadius,
    final Border                  ? border,
    final BoxShadow               ? shadow,
    final bool                    ? readOnly,
    final BoxFit                  ? fit,
    final bool                    ? viewerBlur,
    final double                  ? viewerBlurSigma,
    final bool                    ? previewBlur,
    final double                  ? previewBlurSigma,
    final Duration                ? duration,
    final Color                   ? closeColor,
    final Object                  ? tag,
    final int                     ? maxSize,
  }) =>
  ImagePicker(
    controller        : controller,
    onTap             : onTap,
    onLoadingImage    : onLoadingImage,
    aliveName         : aliveName,
    width             : dimension     ?? 250,
    height            : dimension     ?? 250,
    filterOpacity     : filterOpacity ?? 0.2,
    emptyWidget       : emptyWidget,
    filledWidget      : filledWidget,
    onErrorWidget     : onErrorWidget,
    onLoadingWidget   : onLoadingWidget,
    margin            : margin,
    backgroundColor   : backgroundColor,
    borderRadius      : borderRadius,
    border            : border,
    shadow            : shadow,
    readOnly          : readOnly,
    fit               : fit ?? BoxFit.cover,
    viewerBlur        : viewerBlur,
    viewerBlurSigma   : viewerBlurSigma,
    previewBlur       : previewBlur,
    previewBlurSigma  : previewBlurSigma,
    shape             : BoxShape.rectangle,
    tag               : tag,
    duration          : duration ?? Duration(milliseconds: 250),
    closeColor        : closeColor,
    maxSize           : maxSize,
  );

  factory ImagePicker.circle({
    required final ImageController  controller,
    final Future<void> Function() ? onTap,
    final String                  ? onLoadingImage,
    final String                  ? aliveName,
    final double                  ? dimension,
    final double                  ? filterOpacity,
    final Widget                  ? emptyWidget,
    final Widget                  ? filledWidget,
    final Widget                  ? onErrorWidget,
    final Widget                  ? onLoadingWidget,
    final EdgeInsetsGeometry      ? margin,
    final Color                   ? backgroundColor,
    final Border                  ? border,
    final BoxShadow               ? shadow,
    final bool                    ? readOnly,
    final BoxFit                  ? fit,
    final bool                    ? viewerBlur,
    final double                  ? viewerBlurSigma,
    final bool                    ? previewBlur,
    final double                  ? previewBlurSigma,
    final Object                  ? tag,
    final Duration                ? duration,
    final Color                   ? closeColor,
    final int                     ? maxSize,
  }) =>
  ImagePicker(
    controller        : controller,
    onTap             : onTap,
    onLoadingImage    : onLoadingImage,
    aliveName         : aliveName,
    width             : dimension ?? 250,
    height            : dimension ?? 250,
    filterOpacity     : filterOpacity ?? 0.2,
    emptyWidget       : emptyWidget,
    filledWidget      : filledWidget,
    onErrorWidget     : onErrorWidget,
    onLoadingWidget   : onLoadingWidget,
    margin            : margin,
    backgroundColor   : backgroundColor,
    border            : border,
    shadow            : shadow,
    readOnly          : readOnly,
    fit               : fit ?? BoxFit.cover,
    viewerBlur        : viewerBlur,
    viewerBlurSigma   : viewerBlurSigma,
    previewBlur       : previewBlur,
    previewBlurSigma  : previewBlurSigma,
    shape             : BoxShape.circle,
    tag               : tag,
    duration          : duration ?? Duration(milliseconds: 250),
    closeColor        : closeColor,
    maxSize           : maxSize,
  );

  factory ImagePicker.expand({
    required final ImageController  controller,
    final Future<void> Function() ? onTap,
    final String                  ? onLoadingImage,
    final String                  ? aliveName,
    final double                  ? filterOpacity,
    final Widget                  ? emptyWidget,
    final Widget                  ? filledWidget,
    final Widget                  ? onErrorWidget,
    final Widget                  ? onLoadingWidget,
    final EdgeInsetsGeometry      ? margin,
    final Color                   ? backgroundColor,
    final BorderRadius            ? borderRadius,
    final Border                  ? border,
    final BoxShadow               ? shadow,
    final bool                    ? readOnly,
    final BoxFit                  ? fit,
    final bool                    ? viewerBlur,
    final double                  ? viewerBlurSigma,
    final bool                    ? previewBlur,
    final double                  ? previewBlurSigma,
    final Object                  ? tag,
    final Duration                ? duration,
    final Color                   ? closeColor,
    final int                     ? maxSize,
  }) =>
  ImagePicker(
    controller        : controller,
    onTap             : onTap,
    onLoadingImage    : onLoadingImage,
    aliveName         : aliveName,
    width             : double.infinity,
    height            : double.infinity,
    filterOpacity     : filterOpacity ?? 0.2,
    emptyWidget       : emptyWidget,
    filledWidget      : filledWidget,
    onErrorWidget     : onErrorWidget,
    onLoadingWidget   : onLoadingWidget,
    margin            : margin,
    backgroundColor   : backgroundColor,
    borderRadius      : borderRadius,
    border            : border,
    shadow            : shadow,
    readOnly          : readOnly,
    fit               : fit ?? BoxFit.cover,
    viewerBlur        : viewerBlur,
    viewerBlurSigma   : viewerBlurSigma,
    previewBlur       : previewBlur,
    previewBlurSigma  : previewBlurSigma,
    shape             : BoxShape.rectangle,
    tag               : tag,
    duration          : duration ?? Duration(milliseconds: 250),
    closeColor        : closeColor,
    maxSize           : maxSize,
  );
}
