library n_image_picker_view;

import 'package:flutter/material.dart';
import 'image_body.dart' show ImageBody;
import 'image_controller.dart' show ImageController;

class ImagePicker extends ImageBody {
  ImagePicker({
    required super.controller,
    required super.width,
    required super.height,
    super.onAdd,
    super.onDelete,
    super.urlImage,
    super.assetImage,
    super.emptyWidget,
    super.onErrorWidget,
    super.onLoadingWidget,
    super.margin,
    super.backgroundColor,
    super.borderRadius,
    super.border,
    super.shadow,
    super.readOnly,
    super.fit,
    super.viewerBlur,
    super.viewerBlurSigma,
    super.shape,
    super.tag,
    super.duration,
    super.closeColor,
    super.maxSize,
    super.headers,
    super.key,
    super.deleteIcon,
    super.expandIcon,
    super.errorIcon,
    super.dragIcon,
  }) : assert( urlImage == null || assetImage == null, "Only one image must be provided" );

  factory ImagePicker.square({
    required final ImageController  controller,
    final GestureTapCallback  ? onAdd,
    final GestureTapCallback  ? onDelete,
    final String              ? urlImage,
    final String              ? assetImage,
    final bool                ? alive,
    final double              ? dimension,
    final Widget              ? emptyWidget,
    final Widget              ? onErrorWidget,
    final Widget              ? onLoadingWidget,
    final EdgeInsetsGeometry  ? margin,
    final Color               ? backgroundColor,
    final BorderRadius        ? borderRadius,
    final Border              ? border,
    final BoxShadow           ? shadow,
    final bool                ? readOnly,
    final BoxFit              ? fit,
    final bool                ? viewerBlur,
    final double              ? viewerBlurSigma,
    final Duration            ? duration,
    final Color               ? closeColor,
    final Object              ? tag,
    final int                 ? maxSize,
    final IconData            ? deleteIcon,
    final IconData            ? expandIcon,
    final IconData            ? errorIcon,
    final IconData            ? dragIcon,
  }) =>
  ImagePicker(
    controller        : controller,
    onAdd             : onAdd,
    onDelete          : onDelete,
    urlImage          : urlImage,
    assetImage        : assetImage,
    width             : dimension     ?? 250,
    height            : dimension     ?? 250,
    emptyWidget       : emptyWidget,
    onErrorWidget     : onErrorWidget,
    onLoadingWidget   : onLoadingWidget,
    margin            : margin,
    backgroundColor   : backgroundColor,
    borderRadius      : borderRadius,
    border            : border,
    shadow            : shadow,
    readOnly          : readOnly,
    fit               : fit ?? BoxFit.cover,
    viewerBlur        : viewerBlur,
    viewerBlurSigma   : viewerBlurSigma,
    shape             : BoxShape.rectangle,
    tag               : tag,
    duration          : duration ?? Duration(milliseconds: 250),
    closeColor        : closeColor,
    maxSize           : maxSize,
    deleteIcon        : deleteIcon,
    expandIcon        : expandIcon,
    errorIcon         : errorIcon,
    dragIcon          : dragIcon,
  );

  factory ImagePicker.circle({
    required final ImageController  controller,
    final GestureTapCallback  ? onAdd,
    final GestureTapCallback  ? onDelete,
    final String              ? urlImage,
    final String              ? assetImage,
    final bool                ? alive,
    final double              ? dimension,
    final double              ? filterOpacity,
    final Widget              ? emptyWidget,
    final Widget              ? onErrorWidget,
    final Widget              ? onLoadingWidget,
    final EdgeInsetsGeometry  ? margin,
    final Color               ? backgroundColor,
    final Border              ? border,
    final BoxShadow           ? shadow,
    final bool                ? readOnly,
    final BoxFit              ? fit,
    final bool                ? viewerBlur,
    final double              ? viewerBlurSigma,
    final Object              ? tag,
    final Duration            ? duration,
    final Color               ? closeColor,
    final int                 ? maxSize,
    final IconData            ? deleteIcon,
    final IconData            ? expandIcon,
    final IconData            ? errorIcon,
    final IconData            ? dragIcon,
  }) =>
  ImagePicker(
    controller        : controller,
    onAdd             : onAdd,
    onDelete          : onDelete,
    urlImage          : urlImage,
    assetImage        : assetImage,
    width             : dimension ?? 250,
    height            : dimension ?? 250,
    emptyWidget       : emptyWidget,
    onErrorWidget     : onErrorWidget,
    onLoadingWidget   : onLoadingWidget,
    margin            : margin,
    backgroundColor   : backgroundColor,
    border            : border,
    shadow            : shadow,
    readOnly          : readOnly,
    fit               : fit ?? BoxFit.cover,
    viewerBlur        : viewerBlur,
    viewerBlurSigma   : viewerBlurSigma,
    shape             : BoxShape.circle,
    tag               : tag,
    duration          : duration ?? Duration(milliseconds: 250),
    closeColor        : closeColor,
    maxSize           : maxSize,
    deleteIcon        : deleteIcon,
    expandIcon        : expandIcon,
    errorIcon         : errorIcon,
    dragIcon          : dragIcon,
  );

  factory ImagePicker.expand({
    required final ImageController  controller,
    final GestureTapCallback  ? onAdd,
    final GestureTapCallback  ? onDelete,
    final String              ? urlImage,
    final String              ? assetImage,
    final bool                ? alive,
    final double              ? filterOpacity,
    final Widget              ? emptyWidget,
    final Widget              ? onErrorWidget,
    final Widget              ? onLoadingWidget,
    final EdgeInsetsGeometry  ? margin,
    final Color               ? backgroundColor,
    final BorderRadius        ? borderRadius,
    final Border              ? border,
    final BoxShadow           ? shadow,
    final bool                ? readOnly,
    final BoxFit              ? fit,
    final bool                ? viewerBlur,
    final double              ? viewerBlurSigma,
    final bool                ? previewBlur,
    final double              ? previewBlurSigma,
    final Object              ? tag,
    final Duration            ? duration,
    final Color               ? closeColor,
    final int                 ? maxSize,
    final IconData            ? deleteIcon,
    final IconData            ? expandIcon,
    final IconData            ? errorIcon,
    final IconData            ? dragIcon,
  }) =>
  ImagePicker(
    controller        : controller,
    onAdd             : onAdd,
    onDelete          : onDelete,
    urlImage          : urlImage,
    assetImage        : assetImage,
    width             : double.infinity,
    height            : double.infinity,
    emptyWidget       : emptyWidget,
    onErrorWidget     : onErrorWidget,
    onLoadingWidget   : onLoadingWidget,
    margin            : margin,
    backgroundColor   : backgroundColor,
    borderRadius      : borderRadius,
    border            : border,
    shadow            : shadow,
    readOnly          : readOnly,
    fit               : fit ?? BoxFit.cover,
    viewerBlur        : viewerBlur,
    viewerBlurSigma   : viewerBlurSigma,
    shape             : BoxShape.rectangle,
    tag               : tag,
    duration          : duration ?? Duration(milliseconds: 250),
    closeColor        : closeColor,
    maxSize           : maxSize,
    deleteIcon        : deleteIcon,
    expandIcon        : expandIcon,
    errorIcon         : errorIcon,
    dragIcon          : dragIcon,
  );
}
